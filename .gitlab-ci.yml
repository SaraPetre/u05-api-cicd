
image: python:3.9

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - code_quality
  - tests         # List of stages for jobs, and their order of execution
  - build
  - deploy

.some-script-before: &some-script-before
    - python --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt

"Ensure PEP8-compliancy":
  stage: code_quality
  before_script:
    - *some-script-before
  script:
    - pycodestyle --ignore=E501 src/*.py

"Lint code with pylint":
  stage: code_quality
  before_script:
    - *some-script-before
  script:
    - pylint src/*.py

"Run flake8":
  stage: code_quality
  before_script:
    - *some-script-before
  script:
      flake8 --ignore=E501 src/*.py

"Run unit tests":
  stage: tests
  before_script:
    - *some-script-before
  script:
    - pytest -v src/*.py

"Build and push docker image": # This job runs in the build stage, which runs first.
  image: docker:latest
  stage: build
  only:
    - main
    - merge_requests
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $CI_REGISTRY_IMAGE:latest

"deploy-job":      # This job runs in the deploy stage.
  stage: deploy    # It only runs when jobs in the test stage complete successfully.
  only:
    - main
    - merge_requests
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
